vkCmdDraw와 vkCmdDrawIndexed는 firstInstance, instanceCount매개변수가 존재함 
이는 인스턴싱을 조절하는데 사용된다. 이는 같은 기하구조의 많은 복사본을 그래픽 파이프라인에 전달하는데 사용하는 기술임
각 복사는 인스턴스로 알려져 있음정 점 쉐이더 입력에서 instanceIndex내장 수식자를 사용하여 쉐이더가 현재 인스턴스의 색인을 입력으로 받게한다. 이 입력 변수는 균일 버퍼나 프로그램적으로 계산한 인스턴스 당 변화에서 배개변수를 읽는데 사용할 수 있음
인스턴싱된 정점 특성을 사용해서 불탄이 정점 쉐이더에 각 인스턴스에 대해서 고유 자료를 제공할 수 있게 함
glsl gl_InstanceIndex내장 변수를 통해서 인스턴스 색인을 사용하는 예를 보여준다. 예제는 많은 다른 정육면체를 인스턴스를 사용해서 그리며, 각 인스턴스는 다른 색과 변환이 적용된다. 변환 행렬과 각 정육변체의 색은 균일 버퍼의 쌍에 저장된 배열에 배치됨 쉐이더는 그 뒤 색인을 gl_InstanceIndex내장 변수로 배열에 넣는다. 
layout(set = 0, binding = 0) uniform matrix_uniforms_b
{
mat4 mvp_matrix[1024];
}

layout (set = 0, binding = 1) uniform color_uniforms_b
{
vec4 cube_colors[1024];
}

layout (location = 0) in vec3 i_positino;
out vs_fs
{ flat vec4 color;}

....

r간접 그리기? 
vkCmdDraw와 vkCmdDrawIndexed 명령어에서 명령어의 매개변수는 즉시 매개변수로 명령어에 직접 전달됨 
이는 애플리케이션이 명령어 버퍼를 생성한 ㄱㄱ 그리기 호출의 시점에서 정확하나 매개변수를 알아야 한다는 것을 의미함
대부분의 경우 그리기 명령어의 매개변수에 대한 접근은 애플리케이션이 당연히 가지고있음 
하지만 일부 상황에서는 각 그리기에서 정확한 매개변수를 알 수 없음 

-> 기하 구조의 전체적인 구조는 알고있으나, 정확한 정점의 수와 정점 버퍼의 자료의 위치는알려져 있지 않으며, 이는 물체가 항상 같은 방식으로 렌더링 되지만 세부단계가 시간에 따라 변화하는 겨웅
그리기 명령어가 주 시스템이 아닌 장치에서 생성됨 이 상황의 경우 정점 자료의 전체 수와 배치는 주 시스템이 모를 수 있음

이 경우 간접 그리기를 사용할 수 있음 
이는 매개변수가 며열ㅇ어와 함게 명령어 버퍼에 포함되지 않고 장치에 접근 가능한 메모리에서 매개변수를 읽을 수 있는 그리기 며얼ㅇ어다 .
첫 간접 그리기 명령어는 vkCmdDrawIndirect()임 
이ㅡㄴㄴ 버퍼에 포함된 매개변수를 사용해서 비색인 그리기를 수행함 
vkComdDrawIndirect() - 바로 그리지 않음
VkComdBuffer commandBuffer,
VkBuffer buffer,
VkDeviceSize offset,
uint32_t drawCount,
uint32_t stride

명령어 자체는 ckCmdDraw와 같이 여전히 명령어 버퍼에 씀
commandBUffer는 명령어가 배치되는 명령어 버퍼임 하지만 명령어의 매개변수는 buffer에 설정된 버퍼에서 offset에 설정된 바이트 단위 오프셋에서 온다?? 씨발.. 아오 
버퍼에서 이 오프셋에서 , VkDrawIndirectCommand의 인스턴스가 나타나야 하며, 며열ㅇ어의 실제 매개변수를 포함한다. 

버퍼에 설정된 버퍼에서 - 버퍼에 설정된 버퍼의 offset에 설정된 바이트 ㄴ=단위 오프셋에서 온다????? 버퍼에서 이 오프셋에서, VkDrawIndirectCommand의 인스턴스가 나타나야 함 명령어의 실제 매개변수를 포함한다..????? 
음 

VkDrawIndirectCommand의 멤버는 vkCmdDraw()의 비슷한 이름의 매개변수와 같은 의미를 가짐 vertexCount와 instanceCount는 각각 적용할 정점과 색인의 수임 firstVertex와 firstInstance는 각각 정점과 인스턴스 색인의 시작 값 
vkCmdDrawIndirect()는 비색인, 간접 그리기를 버퍼 객체에서의 매개변수를 상ㅇ해서 수행함 또한 색인 간접 그리기를 vkCmdDrawIndexedIndirect()를 사용해서 수행 가능함 
위랑 완전 똑같음
vkCmdDrawIndexedIndirect()의 매개변수는 vkCmdDrawIndirect()와 도일하다 commandBuffer는 명령억 ㅏ쓰여진 명령어 버퍼임 buffer는 매개변수를 포함한 버퍼, offset은 버퍼에 매개변수가 위치한 바이트 
commandBuffer는 명령어가 쓰여진 명령어 버퍼임 - 명령어 VkDrawIndexedIndirectCommand
buffer는 매개변수를 포함한 버퍼, offset은 버퍼에 매개변수가 위치한 바이트 단위의 오프셋임 하지만 vkCmdDrwaIndexedIndirect의 매개변수를 포함한 자료구조는 다름 이는 VkDrawIndexedIndirectCommand의 인스턴스.. 


책은보아도 뭔 개소린지 모르겠다
일단 indirect와 바로 그리는 명령 2가지가 있다는걸 알았음 
일단 바로 그리는거엔 instancing이 기본으로 가능하도록 되어있고 



draw명령어로 인스턴싱 .>! 하기전에 


https://github.com/SaschaWillems/Vulkan/blob/master/examples/instancing/instancing.cpp
인스턴싱 데이터가 있고 
인스턴싱을 하기위한 버퍼도 필요함 



layout (set = 0, binding = 1) uniform UniformBufferInstance
{
	mat4 world_mtx[10];
}instance_data;
instance_data.world_mtx[gl_InstanceIndex] * 